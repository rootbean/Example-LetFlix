{"version":3,"sources":["auth/auth.service.js"],"names":["isAuthenticated","signToken","validateJwt","secret","secrets","session","use","req","res","next","query","hasOwnProperty","headers","authorization","access_token","cookies","token","find","where","id","user","then","status","end","catch","err","alias","sign","expiresIn"],"mappings":"AAAA;;;;;QAegBA,e,GAAAA,e;QAmCAC,S,GAAAA,S;;AAjDhB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAIC,cAAc,0BAAW;AAC3BC,UAAQ,sBAAOC,OAAP,CAAeC;AADI,CAAX,CAAlB;;AAIA;;;;AAIO,SAASL,eAAT,GAA2B;AAChC,SAAO;AACL;AADK,GAEJM,GAFI,CAEA,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC5B;AACA,QAAGF,IAAIG,KAAJ,IAAaH,IAAIG,KAAJ,CAAUC,cAAV,CAAyB,cAAzB,CAAhB,EAA0D;AACxDJ,UAAIK,OAAJ,CAAYC,aAAZ,eAAsCN,IAAIG,KAAJ,CAAUI,YAAhD;AACD;AACF;AACC,QAAGP,IAAIG,KAAJ,IAAa,OAAOH,IAAIK,OAAJ,CAAYC,aAAnB,KAAqC,WAArD,EAAkE;AAChEN,UAAIK,OAAJ,CAAYC,aAAZ,eAAsCN,IAAIQ,OAAJ,CAAYC,KAAlD;AACD;AACDd,gBAAYK,GAAZ,EAAiBC,GAAjB,EAAsBC,IAAtB;AACD,GAZI;AAaL;AAbK,GAcJH,GAdI,CAcA,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC5B,gBAAKQ,IAAL,CAAU;AACRC,aAAO;AACLC,YAAIZ,IAAIa,IAAJ,CAASD;AADR;AADC,KAAV,EAKGE,IALH,CAKQ,gBAAQ;AACZ,UAAG,CAACD,IAAJ,EAAU;AACR,eAAOZ,IAAIc,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,EAAP;AACD;AACDhB,UAAIa,IAAJ,GAAWA,IAAX;AACAX;AACD,KAXH,EAYGe,KAZH,CAYS;AAAA,aAAOf,KAAKgB,GAAL,CAAP;AAAA,KAZT;AAaD,GA5BI,CAAP;AA6BD;;AAED;;;AAGO,SAASxB,SAAT,CAAmBkB,EAAnB,EAAuBO,KAAvB,EAA8B;AACnC,SAAO,uBAAIC,IAAJ,CAAS,EAAER,MAAF,EAAMO,YAAN,EAAT,EAAwB,sBAAOtB,OAAP,CAAeC,OAAvC,EAAgD;AACrDuB,eAAW,KAAK,EAAL,GAAU;AADgC,GAAhD,CAAP;AAGD","file":"auth.service.js","sourcesContent":["'use strict';\nimport config from '../config/environment';\nimport jwt from 'jsonwebtoken';\nimport expressJwt from 'express-jwt';\nimport compose from 'composable-middleware';\nimport {User} from '../sqldb';\n\nvar validateJwt = expressJwt({\n  secret: config.secrets.session\n});\n\n/**\n * Attaches the user object to the request if authenticated\n * Otherwise returns 403\n */\nexport function isAuthenticated() {\n  return compose()\n    // Validate jwt\n    .use(function(req, res, next) {\n      // allow access_token to be passed through query parameter as well\n      if(req.query && req.query.hasOwnProperty('access_token')) {\n        req.headers.authorization = `Bearer ${req.query.access_token}`;\n      }\n     // IE11 forgets to set Authorization header sometimes. Pull from cookie instead.\n      if(req.query && typeof req.headers.authorization === 'undefined') {\n        req.headers.authorization = `Bearer ${req.cookies.token}`;\n      }\n      validateJwt(req, res, next);\n    })\n    // Attach user to request\n    .use(function(req, res, next) {\n      User.find({\n        where: {\n          id: req.user.id\n        }\n      })\n        .then(user => {\n          if(!user) {\n            return res.status(401).end();\n          }\n          req.user = user;\n          next();\n        })\n        .catch(err => next(err));\n    });\n}\n\n/**\n * Returns a jwt token signed by the app secret\n */\nexport function signToken(id, alias) {\n  return jwt.sign({ id, alias }, config.secrets.session, {\n    expiresIn: 60 * 60 * 5\n  });\n}\n"]}