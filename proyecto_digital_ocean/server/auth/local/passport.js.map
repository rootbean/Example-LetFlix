{"version":3,"sources":["auth/local/passport.js"],"names":["setup","localAuthenticate","User","email","password","done","find","where","toLowerCase","then","user","message","toString","authError","catch","err","use","usernameField","passwordField"],"mappings":";;;;;QA+BgBA,K,GAAAA,K;;AA/BhB;;;;AACA;;AACA;;;;;;AAEA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,QAAxC,EAAkDC,IAAlD,EAAwD;AACtDH,OAAKI,IAAL,CAAU;AACRC,WAAO;AACLJ,aAAOA,MAAMK,WAAN;AADF;AADC,GAAV,EAKGC,IALH,CAKQ,gBAAQ;AACZ,QAAG,CAACC,IAAJ,EAAU;AACR,aAAOL,KAAK,IAAL,EAAW,KAAX,EAAkB;AACvBM,iBAAS;AADc,OAAlB,CAAP;AAGD;AACD,QAAIP,QAAJ,EAAc;AACZ,UAAIM,KAAKN,QAAL,KAAkB,mBAAOA,QAAP,EAAiBQ,QAAjB,CAA0B,KAA1B,CAAtB,EAAwD;AACtD,eAAOP,KAAK,IAAL,EAAWK,IAAX,CAAP;AACD,OAFD,MAEO;AACL,eAAOL,KAAK,IAAL,EAAW,KAAX,EAAkB;AACvBM,mBAAS;AADc,SAAlB,CAAP;AAGD;AACF,KARD,MAQO;AACL,aAAON,KAAKQ,SAAL,CAAP;AACD;AACF,GAtBH,EAuBGC,KAvBH,CAuBS;AAAA,WAAOT,KAAKU,GAAL,CAAP;AAAA,GAvBT;AAwBD;;AAEM,SAASf,KAAT,CAAeE,IAAf,CAAmB,YAAnB,EAAiC;AACtC,qBAASc,GAAT,CAAa,4BAAkB;AAC7BC,mBAAe,OADc;AAE7BC,mBAAe,UAFc,CAEH;AAFG,GAAlB,EAGV,UAASf,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;AACjC,WAAOJ,kBAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,QAA/B,EAAyCC,IAAzC,CAAP;AACD,GALY,CAAb;AAMD","file":"passport.js","sourcesContent":["import passport from 'passport';\nimport {Strategy as LocalStrategy} from 'passport-local';\nimport sha512 from 'sha512';\n\nfunction localAuthenticate(User, email, password, done) {\n  User.find({\n    where: {\n      email: email.toLowerCase()\n    }\n  })\n    .then(user => {\n      if(!user) {\n        return done(null, false, {\n          message: 'This email is not registered.'\n        });\n      }\n      if (password) {\n        if (user.password === sha512(password).toString('hex')) {\n          return done(null, user);\n        } else {\n          return done(null, false, {\n            message: 'The password is incorrect!.'\n          });\n        }\n      } else {\n        return done(authError);\n      }\n    })\n    .catch(err => done(err));\n}\n\nexport function setup(User/*, config*/) {\n  passport.use(new LocalStrategy({\n    usernameField: 'email',\n    passwordField: 'password' // this is the virtual field on the model\n  }, function(email, password, done) {\n    return localAuthenticate(User, email, password, done);\n  }));\n}\n"]}