{"version":3,"sources":["api/user/user.model.js"],"names":["module","exports","sequelize","DataTypes","User","define","id","type","INTEGER","allowNull","primaryKey","autoIncrement","alias","STRING","unique","msg","email","validate","isEmail","password","notEmpty","registerDate","DATE","defaultValue","Date","associate","models","hasMany","Comment","as","foreignKey","field","name","FavoriteShow","Qualification"],"mappings":"AAAA;;AAEA;;;;;;AAEAA,OAAOC,OAAP,GAAiB,UAASC,SAAT,EAAoBC,SAApB,EAA+B;AAC9C,MAAIC,OAAOF,UAAUG,MAAV,CAAiB,OAAjB,EAA0B;;AAEnCC,QAAI;AACFC,YAAMJ,UAAUK,OADd;AAEFC,iBAAW,KAFT;AAGFC,kBAAY,IAHV;AAIFC,qBAAe;AAJb,KAF+B;AAQnCC,WAAO;AACLL,YAAMJ,UAAUU,MAAV,CAAiB,EAAjB,CADD;AAELJ,iBAAW,KAFN;AAGLK,cAAQ;AACNC,aAAK;AADC;AAHH,KAR4B;AAenCC,WAAO;AACLT,YAAMJ,UAAUU,MADX;AAELC,cAAQ;AACNC,aAAK;AADC,OAFH;AAKLE,gBAAU;AACRC,iBAAS;AADD;AALL,KAf4B;AAwBnCC,cAAU;AACRZ,YAAMJ,UAAUU,MADR;AAERI,gBAAU;AACRG,kBAAU;AADF;AAFF,KAxByB;AA8BnCC,kBAAc;AACZd,YAAMJ,UAAUmB,IADJ;AAEZC,oBAAc,IAAIC,IAAJ;AAFF;AA9BqB,GAA1B,CAAX;;AAoCApB,OAAKqB,SAAL,GAAiB,UAASC,MAAT,EAAgB;AAC/B;AACAtB,SAAKuB,OAAL,CAAaD,OAAOE,OAApB,EAA6B;AAC3BC,UAAI,UADuB;AAE3BC,kBAAY;AACVC,eAAO,MADG;AAEVC,cAAM,MAFI;AAGVvB,mBAAW;AAHD;AAFe,KAA7B;;AASAL,SAAKuB,OAAL,CAAaD,OAAOO,YAApB,EAAkC;AAChCJ,UAAI,gBAD4B;AAEhCC,kBAAY;AACVC,eAAO,MADG;AAEVC,cAAM,MAFI;AAGVvB,mBAAW;AAHD;AAFoB,KAAlC;;AASAL,SAAKuB,OAAL,CAAaD,OAAOQ,aAApB,EAAmC;AACjCL,UAAI,gBAD6B;AAEjCC,kBAAY;AACVC,eAAO,MADG;AAEVC,cAAM,MAFI;AAGVvB,mBAAW;AAHD;AAFqB,KAAnC;AAQD,GA5BD;;AA8BA,SAAOL,IAAP;AACD,CApED","file":"user.model.js","sourcesContent":["'use strict';\n\nimport sha512 from 'sha512';\n\nmodule.exports = function(sequelize, DataTypes) {\n  let User = sequelize.define('Users', {\n\n    id: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    alias: {\n      type: DataTypes.STRING(60),\n      allowNull: false,\n      unique: {\n        msg: 'The specified alias is already in use.'\n      },\n    },\n    email: {\n      type: DataTypes.STRING,\n      unique: {\n        msg: 'The specified email address is already in use.'\n      },\n      validate: {\n        isEmail: true\n      }\n    },\n    password: {\n      type: DataTypes.STRING,\n      validate: {\n        notEmpty: true\n      }\n    },\n    registerDate: {\n      type: DataTypes.DATE,\n      defaultValue: new Date()\n    }\n  });\n\n  User.associate = function(models){\n    //OneToMany\n    User.hasMany(models.Comment, {\n      as: 'comments',\n      foreignKey: {\n        field: 'user',\n        name: 'user',\n        allowNull: false\n      }\n    });\n\n    User.hasMany(models.FavoriteShow, {\n      as: 'favoritesShows',\n      foreignKey: {\n        field: 'user',\n        name: 'user',\n        allowNull: false\n      }\n    });\n\n    User.hasMany(models.Qualification, {\n      as: 'qualifications',\n      foreignKey: {\n        field: 'user',\n        name: 'user',\n        allowNull: false\n      }\n    });\n  }\n\n  return User;\n}"]}