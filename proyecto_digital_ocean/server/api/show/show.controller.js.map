{"version":3,"sources":["api/show/show.controller.js"],"names":["findAll","findById","searchByShowName","req","res","getRequest","id","params","query","getRequestSearchName","urlApi","json","err","reply","body","console","log","status","show","i","name","toUpperCase","indexOf","push","getUrlApi","data"],"mappings":"AAAA;;;;;;AAMA;;;;;QAIgBA,O,GAAAA,O;QAIAC,Q,GAAAA,Q;QAKAC,gB,GAAAA,gB;;AAXhB;;;;;;AAEO,SAASF,OAAT,CAAiBG,GAAjB,EAAsBC,GAAtB,EAA2B;AAC9B,SAAOC,WAAW,8BAAX,EAA2CF,GAA3C,EAAgDC,GAAhD,CAAP;AACH;;AAEM,SAASH,QAAT,CAAkBE,GAAlB,EAAuBC,GAAvB,EAA4B;AAC/B,MAAIE,KAAKH,IAAII,MAAJ,CAAWD,EAApB;AACA,SAAOD,6CAA2CC,EAA3C,EAAiDH,GAAjD,EAAsDC,GAAtD,CAAP;AACH;;AAEM,SAASF,gBAAT,CAA0BC,GAA1B,EAA+BC,GAA/B,EAAmC;AACtC,MAAII,QAAQL,IAAII,MAAJ,CAAWC,KAAvB;AACAC,uBAAqB,8BAArB,EAAqDD,KAArD,EAA4DL,GAA5D,EAAiEC,GAAjE;AACH;;AAED,SAASC,UAAT,CAAoBK,MAApB,EAA4BP,GAA5B,EAAiCC,GAAjC,EAAsC;AACpC,SAAO,uBAAQM,MAAR,EAAgB;AACrBC,UAAM;AADe,GAAhB,EAEJ,UAACC,GAAD,EAAMC,KAAN,EAAaC,IAAb,EAAsB;AACvB,QAAIF,GAAJ,EAAS;AACP,aAAOG,QAAQC,GAAR,CAAYJ,GAAZ,CAAP;AACD;AACDR,QAAIa,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqBG,IAArB;AACD,GAPM,CAAP;AAQD;;AAED,SAASL,oBAAT,CAA8BC,MAA9B,EAAsCF,KAAtC,EAA6CL,GAA7C,EAAkDC,GAAlD,EAAsD;AACpD,SAAO,uBAAQM,MAAR,EAAgB;AACrBC,UAAM;AADe,GAAhB,EAEJ,UAACC,GAAD,EAAMC,KAAN,EAAaC,IAAb,EAAsB;AACvB,QAAIF,GAAJ,EAAS;AACP,aAAOG,QAAQC,GAAR,CAAYJ,GAAZ,CAAP;AACD;;AAED,QAAIM,OAAO,EAAX;;AAEA,SAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAI,GAAnB,EAAwBA,GAAxB,EAA4B;AAC1B,UAAGL,KAAKK,CAAL,EAAQC,IAAR,CAAaC,WAAb,GAA2BC,OAA3B,CAAmCd,MAAMa,WAAN,EAAnC,MAA4D,CAAC,CAAhE,EAAkE;AAChEH,aAAKK,IAAL,CAAUT,KAAKK,CAAL,CAAV;AACD;AACF;AACDf,QAAIa,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqBO,IAArB;AACD,GAfM,CAAP;AAgBD;;AAED,SAASM,SAAT,CAAmBC,IAAnB,EAAwB;AACtB,SAAO,8BAAP;AACD","file":"show.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/shows              ->  index\n * GET     /api/shows/:id          ->  show\n */\n\n'use strict';\n\nimport request from 'request';\n\nexport function findAll(req, res) {\n    return getRequest('https://api.tvmaze.com/shows', req, res);\n}\n\nexport function findById(req, res) {\n    let id = req.params.id;\n    return getRequest(`https://api.tvmaze.com/shows/${id}`, req, res);\n}\n\nexport function searchByShowName(req, res){\n    let query = req.params.query\n    getRequestSearchName('https://api.tvmaze.com/shows', query, req, res);\n}\n\nfunction getRequest(urlApi, req, res) {\n  return request(urlApi, {\n    json: true\n  }, (err, reply, body) => {\n    if (err) {\n      return console.log(err);\n    }\n    res.status(200).json(body);\n  });\n}\n\nfunction getRequestSearchName(urlApi, query ,req, res){\n  return request(urlApi, {\n    json: true\n  }, (err, reply, body) => {\n    if (err) {\n      return console.log(err);\n    }\n\n    let show = [];\n\n    for(let i = 0; i < 100; i++){\n      if(body[i].name.toUpperCase().indexOf(query.toUpperCase()) !== -1){\n        show.push(body[i]);\n      }\n    }\n    res.status(200).json(show);\n  });\n}\n\nfunction getUrlApi(data){\n  return 'https://api.tvmaze.com/shows';\n}"]}