{"version":3,"sources":["api/comment/comment.events.js"],"names":["Comment","require","CommentEvents","setMaxListeners","events","afterCreate","afterUpdate","afterDestroy","registerEvents","e","event","hook","emitEvent","doc","options","respuesta","emit","id","callback"],"mappings":"AAAA;;;;AAIA;;;;;;AAEA;;AACA,IAAIA,UAAUC,QAAQ,aAAR,EAAuBD,OAArC;AACA,IAAIE,gBAAgB,0BAApB;;AAEA;AACAA,cAAcC,eAAd,CAA8B,CAA9B;;AAEA;AACA,IAAIC,SAAS;AACXC,eAAa,MADF;AAEXC,eAAa,MAFF;AAGXC,gBAAc;AAHH,CAAb;;AAMA;AACA,SAASC,cAAT,CAAwBR,OAAxB,EAAiC;AAC/B,OAAI,IAAIS,CAAR,IAAaL,MAAb,EAAqB;AACnB,QAAIM,QAAQN,OAAOK,CAAP,CAAZ;AACAT,YAAQW,IAAR,CAAaF,CAAb,EAAgBG,UAAUF,KAAV,CAAhB;AACD;AACF;;AAED,SAASE,SAAT,CAAmBF,KAAnB,EAA0B;AACxB,SAAO,UAASG,GAAT,EAAcC,OAAd,EAAuBC,SAAvB,EAAkC;AACvCb,kBAAcc,IAAd,CAAmBN,QAAQ,GAAR,GAAcG,IAAII,EAArC,EAAyCJ,GAAzC;AACAX,kBAAcc,IAAd,CAAmBN,KAAnB,EAA0BG,GAA1B;AACD,GAHD;AAID;;AAED,SAASE,SAAT,GAAoB;AAClBG,WAAS,IAAT,EAAe,iBAAf;AACD;;AAEDV,eAAeR,OAAf;kBACeE,a","file":"comment.events.js","sourcesContent":["/**\n * Comment model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nvar Comment = require('../../sqldb').Comment;\nvar CommentEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nCommentEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  afterCreate: 'save',\n  afterUpdate: 'save',\n  afterDestroy: 'remove'\n};\n\n// Register the event emitter to the model events\nfunction registerEvents(Comment) {\n  for(var e in events) {\n    let event = events[e];\n    Comment.hook(e, emitEvent(event));\n  }\n}\n\nfunction emitEvent(event) {\n  return function(doc, options, respuesta) {\n    CommentEvents.emit(event + ':' + doc.id, doc);\n    CommentEvents.emit(event, doc);\n  };\n}\n\nfunction respuesta(){\n  callback(null, 'Success message')\n}\n\nregisterEvents(Comment);\nexport default CommentEvents;\n"]}