{"version":3,"sources":["api/comment/comment.model.js"],"names":["module","exports","sequelize","DataTypes","Comment","define","id","type","INTEGER","allowNull","primaryKey","autoIncrement","description","STRING","registerDate","DATE","defaulValue","Date","active","BOOLEAN","show","associate","models","belongsTo","User","onDelete","foreignKey","field","name","hasMany","as"],"mappings":"AAAA;;AAEAA,OAAOC,OAAP,GAAiB,UAASC,SAAT,EAAoBC,SAApB,EAA+B;AAC9C,MAAIC,UAAUF,UAAUG,MAAV,CAAiB,UAAjB,EAA6B;AACzCC,QAAI;AACFC,YAAMJ,UAAUK,OADd;AAEFC,iBAAW,KAFT;AAGFC,kBAAY,IAHV;AAIFC,qBAAe;AAJb,KADqC;AAOzCC,iBAAa;AACXL,YAAMJ,UAAUU,MAAV,CAAiB,GAAjB,CADK;AAEXJ,iBAAW;AAFA,KAP4B;AAWzCK,kBAAc;AACZP,YAAMJ,UAAUY,IADJ;AAEZC,mBAAa,IAAIC,IAAJ;AAFD,KAX2B;AAezCC,YAAQ;AACNX,YAAMJ,UAAUgB,OADV;AAENH,mBAAa;AAFP,KAfiC;AAmBzCI,UAAM;AACJb,YAAMJ,UAAUK,OADZ;AAEJC,iBAAW;AAFP;AAnBmC,GAA7B,CAAd;;AAyBAL,UAAQiB,SAAR,GAAoB,UAASC,MAAT,EAAgB;;AAElC;AACAlB,YAAQmB,SAAR,CAAkBD,OAAOE,IAAzB,EAA+B;AAC7BC,gBAAU,UADmB;AAE7BC,kBAAY;AACVC,eAAO,MADG;AAEVC,cAAM,MAFI;AAGVnB,mBAAW;AAHD;AAFiB,KAA/B;;AASAL,YAAQmB,SAAR,CAAkBD,OAAOlB,OAAzB,EAAkC;AAChCqB,gBAAU,UADsB;AAEhCC,kBAAY;AACVC,eAAO,SADG;AAEVC,cAAM,SAFI;AAGVnB,mBAAW;AAHD;AAFoB,KAAlC;;AASA;AACAL,YAAQyB,OAAR,CAAgBP,OAAOlB,OAAvB,EAAgC;AAC9B0B,UAAI,aAD0B;AAE9BJ,kBAAY;AACVC,eAAO,SADG;AAEVC,cAAM,SAFI;AAGVnB,mBAAW;AAHD;AAFkB,KAAhC;AAQD,GA9BD;;AAgCA,SAAOL,OAAP;AACD,CA3DD","file":"comment.model.js","sourcesContent":["'use strict';\n\nmodule.exports = function(sequelize, DataTypes) {\n  let Comment = sequelize.define('Comments', {\n    id: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    description: {\n      type: DataTypes.STRING(255),\n      allowNull: false\n    },\n    registerDate: {\n      type: DataTypes.DATE,\n      defaulValue: new Date()\n    },\n    active: {\n      type: DataTypes.BOOLEAN,\n      defaulValue: true\n    },\n    show: {\n      type: DataTypes.INTEGER,\n      allowNull: false\n    }\n  });\n\n  Comment.associate = function(models){\n\n    //ManyToOne\n    Comment.belongsTo(models.User, {\n      onDelete: 'RESTRICT',\n      foreignKey: {\n        field: 'user',\n        name: 'user',\n        allowNull: false\n      }\n    });\n\n    Comment.belongsTo(models.Comment, {\n      onDelete: 'RESTRICT',\n      foreignKey: {\n        field: 'replies',\n        name: 'replies',\n        allowNull: true\n      }\n    });\n\n    //OneToMany\n    Comment.hasMany(models.Comment, {\n      as: 'repliesList',\n      foreignKey: {\n        field: 'replies',\n        name: 'replies',\n        allowNull: true\n      }\n    });    \n  }\n\n  return Comment;\n}\n"]}